
#define _CRT_SECURE_NO_WARNINGS

//소스파일

// ← 주석(comment) : 프로그램에서 영향을 끼치지 않는 부분(컴파일러가 무시하는 문장)

/* 슬래쉬 별표 사이에 무엇을 얼마나 쓰던지 다 주석이 됨 */
/*
- ctrl + d : 한줄 복제하기
- shift + del : 한줄 삭제하기
- shift + 화살표 : 블럭잡기
- alt + shift + 화살표 : 세로로 블럭잡기 가능
- ctrl + space bar : 자동완성기능(인텔리센트)
- alt + 위아래 화살표 : 해당 줄 위치 바꾸기
- 프로그램 디버그 : <f5> 키 또는 [디버그] -> [디버깅 시작] 메뉴
- ctrl + b + b : 프로젝트 빌드(솔루션 빌드) / f5눌러서 확인하기 오래걸릴때 컴파일이 문제없는지 확인할때 사용
- ctrl + b + r : 프로젝트 리빌드(제대로했는데 실행이 잘 안될때 리빌드 해보는게 좋음)
- ctrl + 화살표 위아래 : 페이지 업다운
- ctrl + 화살표 좌우 : 단어 단위로 움직이기

- 선언은 보통 헤더파일에서 진행함
*/

/*
- 컴파일러 : 번역기(사람이 써놓은 코드를 기계가 알아듣게 번역해줌)
  -> 목적코드 생성
  -> 링커가 연결해서 실행파일 생성
- 빌드 : 실행파일 생성하기
- 리빌드 : 전체 다시 빌드하기(솔루션정리 + 빌드)
*/

#include <iostream> //include : 포함시키다 / iostream을 포함시켜라 / iostream : 인풋 아웃풋 스트림 입출력 관련 정보가 담겨있는거
//#include <cstdio> // iostream이 아니더라도 사용 가능
#include <stdio.h> // stdio.h에 네임스페이스 추가한 래퍼
#include "header.h" //헤더를 선언하면 헤더에 있는 내용이 전부 선언됨

// 명령어에 빨간줄이 생기면 잘못됐다는 뜻
// 명령어에 녹색줄이 생기면 지금은 괜찮은데 문제될 수 있어라는 경고

//using namespace std; //std를 자동으로 추가시킨다는 것 / std위치를 알아야하기때문에 교육땐 빼고 쓸예정

int main() // 앤트리 포인트(코드가 시작되는곳) / main함수는 반드시 하나만 있어야함
{
	printf("hi\n"); // c언어 출력방법
	printf("\"백종민\"\t"); //""안에 \n이 있으면 줄을 바꾸라는 의미(이스케이프 시퀀스)
	printf("96년생입니다.\n");

/* 
이스케이프 시퀀스 \ : 백슬래시
- \n : 줄바꾸기(개행문자)
- \t : 탭 넣기
- \" : 쌍따옴표 한개
- \\ : \넣기
- \r : 캐리지 리턴(윈도우에서는 중요하지 않음. 리눅수에서는 중요함 / 커서를 다음 줄 맨 앞으로 가게하는것)
*/

//	std::cout << "hi\n"; // c++ 출력 방법 / cout은 iostream에 속해있음 그래서 cout을 쓰려면 iostream을 incloud해야하는거임

	int number = 0;
	scanf("%d", &number); // 숫자를 하나 입력받기(c언어)

	printf("입력한 숫자는 : %d\n", number);

	std::cin >> number; // 숫자를 하나 입력받기(c++언어)
	printf("입력한 숫자는(c++) : %d\n", number);

	// 추가추가추가추가추가추가추가추가추가추가추가111111112222
	// 1111


	//프로그램을 실행했을때 나이를 물어보고 입력받은 숫자를 그대로 출력해보기

	return 0;
}
