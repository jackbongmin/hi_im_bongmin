
#define _CRT_SECURE_NO_WARNINGS // ← 보라색 글씨는 매크로?

//소스파일

// ← 주석(comment) : 프로그램에서 영향을 끼치지 않는 부분(컴파일러가 무시하는 문장)

/* 슬래쉬 별표 사이에 무엇을 얼마나 쓰던지 다 주석이 됨 */
/*
- ctrl + d : 한줄 복제하기
- shift + del : 한줄 삭제하기
- shift + 화살표 : 블럭잡기
- alt + shift + 화살표 : 세로로 블럭잡기 가능
- ctrl + space bar : 자동완성기능(인텔리센트)
- alt + 위아래 화살표 : 해당 줄 위치 바꾸기
- 프로그램 디버그 : <f5> 키 또는 [디버그] -> [디버깅 시작] 메뉴
- ctrl + b + b : 프로젝트 빌드(솔루션 빌드) / f5눌러서 확인하기 오래걸릴때 컴파일이 문제없는지 확인할때 사용
- ctrl + b + r : 프로젝트 리빌드(제대로했는데 실행이 잘 안될때 리빌드 해보는게 좋음)
- ctrl + 화살표 위아래 : 페이지 업다운
- ctrl + 화살표 좌우 : 단어 단위로 움직이기
- ctrl + k + c = 한번에 주석
- ctrl + k + u = 한번에 주석 풀기


- 선언은 보통 헤더파일에서 진행함
*/

/*
- 컴파일러 : 번역기(사람이 써놓은 코드를 기계가 알아듣게 번역해줌)
  -> 목적코드 생성
  -> 링커가 연결해서 실행파일 생성
- 빌드 : 실행파일 생성하기
- 리빌드 : 전체 다시 빌드하기(솔루션정리 + 빌드)
*/

#include <iostream> //include : 포함시키다 / iostream을 포함시켜라 / iostream : 인풋 아웃풋 스트림 입출력 관련 정보가 담겨있는거
//#include <cstdio> // iostream이 아니더라도 사용 가능
#include <stdio.h> // stdio.h에 네임스페이스 추가한 래퍼
#include "header.h" //헤더를 선언하면 헤더에 있는 내용이 전부 선언됨

// 명령어에 빨간줄이 생기면 잘못됐다는 뜻
// 명령어에 녹색줄이 생기면 지금은 괜찮은데 문제될 수 있어라는 경고

//using namespace std; //std를 자동으로 추가시킨다는 것 / std위치를 알아야하기때문에 교육땐 빼고 쓸예정

int main() // 앤트리 포인트(코드가 시작되는곳) / main함수는 반드시 하나만 있어야함
{
//	//printf("hi\n"); // c언어 출력방법
//	//printf("\"백종민\"\t"); //""안에 \n이 있으면 줄을 바꾸라는 의미(이스케이프 시퀀스)
//	//printf("96년생입니다.\n");
//
///* 
//이스케이프 시퀀스 \ : 백슬래시
//- \n : 줄바꾸기(개행문자)
//- \t : 탭 넣기
//- \" : 쌍따옴표 한개
//- \\ : \넣기
//- \r : 캐리지 리턴(윈도우에서는 중요하지 않음. 리눅수에서는 중요함 / 커서를 다음 줄 맨 앞으로 가게하는것)
//*/
//
////	std::cout << "hi\n"; // c++ 출력 방법 / cout은 iostream에 속해있음 그래서 cout을 쓰려면 iostream을 incloud해야하는거임
//
//	//int number = 0;
//
//	//scanf("%d", &number); // 숫자를 하나 입력받기(c언어)
//	//printf("입력한 숫자는 : %d\n", number);
//
//	//std::cin >> number; // 숫자를 하나 입력받기(c++언어)
//	//printf("입력한 숫자는(c++) : %d\n", number);
//
//	// 당신의 나이는? (숫자 입력) 당신의 나이는 nn살 입니다. 출력
//	//printf("당신의 나이는?\n");
//	//std::cin >> number;
//	//printf("당신의 나이는 : %d", number);
//	//printf("살 입니다.\n");
//
///*
//변수(variable)
// - 변하는 숫자
// - 컴퓨터에 값을 기억시키기 위해 만들고 사용
//*/
//
///*
//int number = 0; → number라는 이름을 가진 int(인티저)변수를 선언하고 거기에 0을 대입한다.
//=
//int number; // 변수 선언
//number = 0; // 변수에 값을 대입
//
//int : 정수형(소수점이 없는 숫자 / 소수점 뒤 숫자는 버림)
//*/
//
///*
//연산자(operator)
// - 계산을 하기 위한 기호
// - 대입 연산자 : 어디다가 뭘 넣어주는거 / 이거는 이거다
//   = : 오른쪽에 있는 값을 왼쪽에 넣어라(a=b; // b에 있는 값을 a에 넣어라라는 뜻)
//   == : 양변이 같다. (==랑 =는 다른거) / (a==b; // a는 b이다라는 뜻)
// - 산술 연산자
//   +(더하기) -(빼기) *(곱하기) /(나누기) %(나머지 연산)
//   ex) a = 5%3; // a = 2
// - 복합 대입연산자
//   줄여쓰기용
//   a += b; // 아래와 같은 코드
//   a = a + b;
// - 증감 연산자
//   a++;  // a에다가 1을 더해라
//   a--;  // a에다가 1을 빼라
//*/
//	//int number1 = 0;
//	//int number2 = 0;
//	// 변수를 지정할땐 반드시 먼저 숫자를 빼먹지 않고 넣어줘라
//	
//	//printf("숫자1을 입력하시오 : ");
//	//std::cin >> number1;
//	//printf("숫자2을 입력하시오 : ");
//	//std::cin >> number2;
//
//	//int number3 = number1 + number2;
//	//printf("두 숫자의 합은 %d입니다.", number3);
//
//
//
//
//	//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
//
//
//
//
//	// 25년 09월 03일 (수요일) 
//
//
//	//float number1 = 10.0f; // 10이라는 float 타입의 값을 float인 number2에 넣기
//	//					   // 실수타입은 f를 보통 넣어준다.
//	//float number2 = 15.0;  // 15라는 double 타입의 값을 float인 number2에 넣기
//	//					   // f를 안넣은건 double임
//	//std::cin >> number1 >> number2;
//	//printf("number1 : %f\nnumber2 : %f", number1, number2); //정수형은 %d / 실수형은 %f
//	//														//%f에 %.2f로 치면 소수점 2자리까지 출력됨
//
//	//간단 실습 : 원의 반지름을 입력받고 넓이 구하기
//
//	//const float number2 = 3.141592f; // 상수를 설정하려면 앞에 "const"를 붙히면 된다.
//	//float number1 = 0.0f;
//
//	//printf("반지름을 입력하시오.\n");
//	//std::cin >> number1;
//	//printf("원의 넓이는 :%.2f입니다.\n", number1 * number1 * number2);
//	
////(단축키) ctrl + r + r : 전체 이름바꾸기 
//	
//
//
//	//비교 연산자
//	
//
//	//float a = 123.0f;
//	//float b = 0.0f;
//
//	//std::cin >> b;
//	//b = b * 123.0f;
//
//	//bool result = a == b;       // f9 : 브레이크 포인트 설정/ 헤제
//
//	//float 타입을 ==로 비교할 때 반드시 아래와 같이 진행해야함. 
//	
//	//float epsilon = 0.001f;     
//	//a > (b + epsilon);
// 	//a < (b + epsilon);              // 이정도의 오차범위는 맞았다고 치자! 라는거
//	
//
//	// 제어문
//
//	// 조건문
//
//	// if : 소괄호 안이 true면 중괄호 안의 코드를 실행하라.
//	//		내가 특정 조건을 만족할 때만 어떤 코드를 실행하고 싶을 때 사용.
//
//	//int a = 10;
//	//int b = 0;
//	//printf("a는 10\nb를 입력하시오 : ");
//	//std::cin >> b;
//
//	//if (a > b)
//	//{
//	//	printf("b가 %d라서 a가 더 크다\n", b);
//	//}
//
//	//if (a <= b)
//	//{
//	//	printf("b가 %d라서 a가 더 작거나 같다\n", b);
//	//}
//
//
//	//// if-else
//
//	//if (a > b)
//	//{
//	//	printf("a가 b보다 크다.\n");
//	//}
//	//else
//	//{
//	//	printf("a가 b보다 크다/\n");
//	//}
//
//
//	//if (b < 60)
//	//{
//	//	//F
//	//}
//	//else if (b < 70)
//	//{
//	//	//D
//	//}
//	//else if (b < 80)
//	//{
//	//	//C
//	//}
//	//else if (b < 90)
//	//{
//	//	//B
//	//}
//	//else 
//	//{
//	//	//A
//	//}
//
//
//	// switch
//
//	//int a = 0;
//	//std::cin >> a;
//	//switch (a)
//	//{
//	//case 1 :
//	//	printf("1이다.\n");
//	//	break;
//	//case 3 :
//	//	printf("3이다.\n");
//	//	break;
//	//case 5 :
//	//	printf("5이다.\n");
//	//	break;
//	//default :
//	//	printf("1,3,5가 아니다.\n");
//	//	break;
//	//}
//
//	
//	// 삼항연산자
//
//	//int a = 10;
//	//int b = 20;
//	//int c = 0;
//
//
//	//if (a > b)
//	//{
//	//	c = a * 2 + b;
//	//}
//	//else
//	//{
//	//	c = a + b * 2;
//	//}
//	//c = (a > b) ? (a * 2 + b) : (a + b * 2); // 삼향 연산자 / 위 if-else를 미관상 예쁘게 만드는거
//
//
//
//
//	// 논리 연산자
//
//	//int a = 10;
//	//if (a > 5 && !(10 > a))
//	//{
//	//	// 성공
//	//}
//	//else
//	//{
//	//	// 실패
//	//}
//

/*
실습1
숫자를 입력받아 양수인지 음수인지 0인지 출력하기
*/

	printf("실습1 \n\n");
	float a1 = 0.0f;
	
	printf("숫자를 입력하시오 : \n");
	std::cin >> a1;

	if (a1 > 0)
	{
		printf("입력하신 숫자는 양수 입니다.\n\n");
	}
	else if  (a1 < 0)
	{
		printf("입력하신 숫자는 음수 입니다.\n\n");
	}
	else
	{
		printf("입력하신 숫자는 0 입니다.\n\n");
	}


/*
실습2
숫자를 입력받아 홀수인지 짝수인지 출력하기
*/

	printf("실습2 \n\n");
	int a2 = 0;

	printf("숫자를 입력하시오 : \n");
	std::cin >> a2;

	if (a2 % 2 == 0)
	{
		printf("입력하신 숫자는 짝수 입니다.\n\n");
	}
	else
	{
		printf("입력하신 숫자는 홀수 입니다.\n\n");
	}

/*
실습3
두 수를 입력 받아 더 큰 수를 출력하기.같을 경우는 같다고 출력.
*/

	printf("실습3 \n\n");
	float a3 = 0.0f;
	float a4 = 0.0f;

	printf("숫자1을 입력하시오 : \n");
	std::cin >> a3;
	printf("숫자2를 입력하시오 : \n");
	std::cin >> a4;

	if (a3 > a4)
	{
		printf("더 큰 숫자는 숫자1인 %.0f입니다.\n\n", a3);
	}
	else if (a3 < a4)
	{
		printf("더 큰 숫자는 숫자2인 %.0f입니다.\n\n", a4);
	}
	else
	{
		printf("두 수는 같습니다.\n\n");
	}

/*
실습4
나이와 키를 입력 받아, 6세 이상, 120cm 이상일 때 롤러코스터 탑승 가능, 그 외에는 불가능으로 출력
*/
	printf("실습4 \n\n");
	int a5 = 0;
	float a6 = 0.0f;

	printf("나이를 입력하시오 : \n");
	std::cin >> a5;
	printf("키를 입력하시오 : \n");
	std::cin >> a6;

	if (a5 >= 6 && a6 >= 120)
	{
		printf("롤러코스터 탑승 가능입니다. \n\n");
	}
	else
	{
		printf("롤러코스터 탑승 불가능입니다. \n\n");
	}

/*
실습5
점수를 입력 받아 90점 이상은 A, 80점 이상은 B, 70점 이상은 C, 60점 이상은 D, 그 이하는 F라고 출력하기
*/

	printf("실습5 \n\n");
	int a7 = 0;

	printf("점수를 입력하시오 : \n");
	std::cin >> a7;

	if (a7 >= 90)
	{
		printf("당신의 점수는 A입니다. \n\n");
	}
	else if (a7 >= 80)
	{
		printf("당신의 점수는 B입니다. \n\n");
	}
	else if (a7 >= 70)
	{
		printf("당신의 점수는 C입니다. \n\n");
	}
	else if (a7 >= 60)
	{
		printf("당신의 점수는 D입니다. \n\n");
	}
	else 
	{
		printf("당신의 점수는 F입니다. \n\n");
	}

/*
실습6
세 과목의 점수를 입력받아, 세 과목 평균 60점 이상이면 "합격", 아니면 "불합격"을 출력하는 프로그램을 작성하세요.
한과목이라도 40점 미만이면 불합격 출력하기
*/
	
	printf("실습6 \n\n");
	float a8 = 0.0f;
	float a9 = 0.0f;
	float a10 = 0.0f;

	printf("과목1의 점수를 입력하시오 : \n");
	std::cin >> a8;
	printf("과목2의 점수를 입력하시오 : \n");
	std::cin >> a9;
	printf("과목3의 점수를 입력하시오 : \n");
	std::cin >> a10;

	if (((a8 + a9 + a10) / 3 >= 60) && (a8 > 40 && a9 > 40 && a10 > 40))
	{
		printf("합격입니다. \n");
	}
	else
	{
		printf("불합격입니다. \n");
	}



	//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
	return 0;
}
